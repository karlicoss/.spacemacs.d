#!/usr/bin/env python3
'''

This script

TODO xdg-open

To register the MIME handler, run

   ./mimemacs --install

'''

# TODO let me know if there is a more standard mechanism

# TODO not sure if it should be emacs:// or something?
PROTOCOL = "emacs:"


import argparse
from pathlib import Path
import sys
import subprocess
from subprocess import check_call, run
import tempfile


def error(what) -> None:
    # notify-send used as a user-facing means of error reporting
    run(["notify-send", what])
    sys.exit(1)


def install() -> None:
    this_script = str(Path(__file__).absolute())
    CONTENT = f"""
[Desktop Entry]
Name=Emacs Mime handler
Exec={this_script} %u
Icon=emacs-icon
Type=Application
Terminal=false
MimeType=x-scheme-handler/emacs;
""".strip()
    with tempfile.TemporaryDirectory() as td:
        pp = Path(td) / 'mimemacs.desktop'
        pp.write_text(CONTENT)
        check_call(['desktop-file-validate', str(pp)])
        check_call([
            'desktop-file-install',
            '--dir', str(Path('~/.local/share/applications').expanduser()),
            '--rebuild-mime-info-cache',
            str(pp),
        ])



# TODO split in get_file_and_position, add test (on the top)
def open(uri: str) -> None:
    if not uri.startswith(PROTOCOL):
        error(f"Unexpected protocol {uri}")

    uri = uri[len(PROTOCOL):]
    spl = uri.split(':')

    linenum = []
    if len(spl) == 1:
        pass # no lnum specified
    elif len(spl) == 2:
        uri = spl[0]
        # TODO could use that for column number? maybe an overkill though.. https://www.gnu.org/software/emacs/manual/html_node/emacs/emacsclient-Options.html 
        linenum = ["+" + spl[1]]
    else:
        # TODO what if it actually has colons?
        error(f"Extra colons in URI {uri}")
    from urllib.parse import unquote
    uri = unquote(uri)

    ecmd = [
        "emacsclient",
        "--tty",
        '-a ""', # trick to run daemon if it isn't https://www.gnu.org/software/emacs/manual/html_node/emacs/emacsclient-Options.html
    ] + linenum + [
        uri
    ]
    check_call([
        "x-terminal-emulator", # TODO not sure if it makes sense on non-debian?
        "-e",
        ' '.join(ecmd),
    ])
   
    

def main():
    p = argparse.ArgumentParser()
    p.add_argument('--install', action='store_true', help='')
    p.add_argument('uri', nargs='?')
    args = p.parse_args()
    if args.install:
        install()
    else:
        open(args.uri)

if __name__ == '__main__':
    main()
